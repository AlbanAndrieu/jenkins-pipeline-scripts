   Jenkinsfile.run()
      Jenkinsfile.pipeline(groovy.lang.Closure)
         Jenkinsfile.agent()
         Jenkinsfile.parameters(groovy.lang.Closure)
            Jenkinsfile.booleanParam({defaultValue=false, description=Dry run, name=DRY_RUN})
            Jenkinsfile.booleanParam({defaultValue=true, description=Clean before run, name=CLEAN_RUN})
            Jenkinsfile.booleanParam({defaultValue=false, description=Debug run, name=DEBUG_RUN})
            Jenkinsfile.booleanParam({defaultValue=false, description=Debug mvnw, name=MVNW_VERBOSE})
            Jenkinsfile.booleanParam({defaultValue=false, name=RELEASE, description=Perform release-type build.})
            Jenkinsfile.string({defaultValue=, name=RELEASE_BASE, description=Commit tag or branch that should be checked-out for release})
            Jenkinsfile.string({defaultValue=, name=RELEASE_VERSION, description=Release version for artifacts})
         Jenkinsfile.environment(groovy.lang.Closure)
         Jenkinsfile.options(groovy.lang.Closure)
            Jenkinsfile.disableConcurrentBuilds()
            Jenkinsfile.parallelsAlwaysFailFast()
            Jenkinsfile.ansiColor(xterm)
            Jenkinsfile.timeout({time=180, unit=MINUTES})
            Jenkinsfile.timestamps()
         Jenkinsfile.stages(groovy.lang.Closure)
            Jenkinsfile.stage(Setup, groovy.lang.Closure)
               Jenkinsfile.agent(groovy.lang.Closure)
                  Jenkinsfile.docker(groovy.lang.Closure)
                     Jenkinsfile.image(registry.misys.global.ad/fusion-risk/ansible-jenkins-slave:1.0.8)
                     Jenkinsfile.alwaysPull(true)
                     Jenkinsfile.reuseNode(true)
                     Jenkinsfile.registryUrl(https://registry.misys.global.ad)
                     Jenkinsfile.registryCredentialsId(mgr.jenkins)
                     Jenkinsfile.args(--dns-search=misys.global.ad -v /usr/local/sonar-build-wrapper:/usr/local/sonar-build-wrapper -v /workspace/slavearc/tools/:/workspace/slavearc/tools/ -v /jenkins:/home/jenkins -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro --entrypoint='' -v /var/run/docker.sock:/var/run/docker.sock)
                     Jenkinsfile.label(docker-compose)
               Jenkinsfile.steps(groovy.lang.Closure)
                  Jenkinsfile.script(groovy.lang.Closure)
                     Jenkinsfile.load(src/test/jenkins/lib/myenv.groovy)
                        myenv.run()
                     myenv.getPropertyList()
                     Jenkinsfile.properties([])
                     myenv.printEnvironment()
                        myenv.println(COMPOSE_HTTP_TIMEOUT = 200)
                     Jenkinsfile.setBuildName()
                     Jenkinsfile.sh({returnStdout=true, script=./clean.sh})
                     Jenkinsfile.echo(RESULT : build.sh)
            Jenkinsfile.stage(➡ Build - Maven, groovy.lang.Closure)
               Jenkinsfile.agent(groovy.lang.Closure)
                  Jenkinsfile.docker(groovy.lang.Closure)
                     Jenkinsfile.image(registry.misys.global.ad/fusion-risk/ansible-jenkins-slave:1.0.8)
                     Jenkinsfile.alwaysPull(true)
                     Jenkinsfile.reuseNode(true)
                     Jenkinsfile.registryUrl(https://registry.misys.global.ad)
                     Jenkinsfile.registryCredentialsId(mgr.jenkins)
                     Jenkinsfile.args(--dns-search=misys.global.ad -v /usr/local/sonar-build-wrapper:/usr/local/sonar-build-wrapper -v /workspace/slavearc/tools/:/workspace/slavearc/tools/ -v /jenkins:/home/jenkins -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro --entrypoint='' -v /var/run/docker.sock:/var/run/docker.sock)
                     Jenkinsfile.label(docker-compose)
               Jenkinsfile.steps(groovy.lang.Closure)
                  Jenkinsfile.script(groovy.lang.Closure)
                     Jenkinsfile.sh(echo TEST : feature_)
                     Jenkinsfile.withMavenWrapper({goal=install, profile=jacoco, skipSonar=true, skipPitest=true, buildCmdParameters=-Dserver=jetty9x, artifacts=**/target/dependency/jetty-runner.jar, **/target/test-config.jar, **/target/test.war, **/target/*.zip}, groovy.lang.Closure)
                     Jenkinsfile.withShellCheckWrapper({pattern=*.sh})
            Jenkinsfile.stage(SonarQube analysis, groovy.lang.Closure)
               Jenkinsfile.agent(groovy.lang.Closure)
                  Jenkinsfile.docker(groovy.lang.Closure)
                     Jenkinsfile.image(registry.misys.global.ad/fusion-risk/ansible-jenkins-slave:1.0.8)
                     Jenkinsfile.alwaysPull(true)
                     Jenkinsfile.reuseNode(true)
                     Jenkinsfile.registryUrl(https://registry.misys.global.ad)
                     Jenkinsfile.registryCredentialsId(mgr.jenkins)
                     Jenkinsfile.args(--dns-search=misys.global.ad -v /usr/local/sonar-build-wrapper:/usr/local/sonar-build-wrapper -v /workspace/slavearc/tools/:/workspace/slavearc/tools/ -v /jenkins:/home/jenkins -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro --entrypoint='' -v /var/run/docker.sock:/var/run/docker.sock)
                     Jenkinsfile.label(docker-compose)
               Jenkinsfile.environment(groovy.lang.Closure)
               Jenkinsfile.steps(groovy.lang.Closure)
                  Jenkinsfile.script(groovy.lang.Closure)
                     Jenkinsfile.withSonarQubeWrapper({verbose=true, skipMaven=true, project=RKTMP, repository=jenkins-pipeline-scripts}, groovy.lang.Closure)
                     Jenkinsfile.parallel({sample default maven project=groovy.lang.Closure})
                        Jenkinsfile.build({job=bower-fr-integration-test/develop, propagate=false, wait=true})
            Jenkinsfile.stage(➕ Quality - Security, groovy.lang.Closure)
               Jenkinsfile.agent(groovy.lang.Closure)
                  Jenkinsfile.docker(groovy.lang.Closure)
                     Jenkinsfile.image(registry.misys.global.ad/fusion-risk/ansible-jenkins-slave:1.0.8)
                     Jenkinsfile.reuseNode(true)
                     Jenkinsfile.registryUrl(https://registry.misys.global.ad)
                     Jenkinsfile.registryCredentialsId(mgr.jenkins)
                     Jenkinsfile.args(--dns-search=misys.global.ad -v /usr/local/sonar-build-wrapper:/usr/local/sonar-build-wrapper -v /workspace/slavearc/tools/:/workspace/slavearc/tools/ -v /jenkins:/home/jenkins -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro --entrypoint='' -v /var/run/docker.sock:/var/run/docker.sock)
                     Jenkinsfile.label(docker-inside)
               Jenkinsfile.steps(groovy.lang.Closure)
                  Jenkinsfile.script(groovy.lang.Closure)
                     Jenkinsfile.stage(➕ Quality - Security - Checkmarx, groovy.lang.Closure)
                        Jenkinsfile.script(groovy.lang.Closure)
                           Jenkinsfile.withCheckmarxWrapper({projectName=jenkins-pipeline-scripts_Checkmarx, preset=17, groupId=1d9286a6-fc4f-4d65-9010-045ca9032198})
         Jenkinsfile.post(groovy.lang.Closure)
            Jenkinsfile.always(groovy.lang.Closure)
               Jenkinsfile.node(docker-compose, groovy.lang.Closure)
                  Jenkinsfile.runHtmlPublishers([LogParserPublisher, AnalysisPublisher])
                  Jenkinsfile.archiveArtifacts({artifacts=**/*.log, onlyIfSuccessful=false, allowEmptyArchive=true})
               Jenkinsfile.wrapCleanWs()
